<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mphrx</groupId>
	<artifactId>datalake</artifactId>
	<packaging>jar</packaging>
	<version>0.1</version>
	<name>datalake</name>
	<description>Project to build datalake</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<start-class>com.mphrx.datalake.DatalakeApplication</start-class>
		<scalaVersion>2.11</scalaVersion>
		<jacksonVersion>2.9.4</jacksonVersion>
		<spring-boot-version>2.3.0.RELEASE</spring-boot-version>
		<project.name>datalake</project.name>
		<project.version>0.1</project.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


<!--		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Dependencies for datalake (spark and delta-lake) -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scalaVersion}</artifactId>
			<version>2.4.5</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>janino</artifactId>
					<groupId>org.codehaus.janino</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-compiler</artifactId>
					<groupId>org.codehaus.janino</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<artifactId>janino</artifactId>
			<groupId>org.codehaus.janino</groupId>
			<version>3.0.9</version>
		</dependency>
		<dependency>
			<artifactId>commons-compiler</artifactId>
			<groupId>org.codehaus.janino</groupId>
			<version>3.0.9</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_${scalaVersion}</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
<!--		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-paranamer</artifactId>
			<version>${jacksonVersion}</version>
		</dependency>-->
		<!-- https://mvnrepository.com/artifact/io.delta/delta-core -->
		<dependency>
			<groupId>io.delta</groupId>
			<artifactId>delta-core_${scalaVersion}</artifactId>
			<version>0.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb.spark</groupId>
			<artifactId>mongo-spark-connector_${scalaVersion}</artifactId>
			<version>2.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>3.11.0-rc0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.32</version>
		</dependency>


		<!-- For Object Storage Minio -->
		<!-- https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-aws -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-aws</artifactId>
			<version>2.8.2</version>
		</dependency>

<!--		&lt;!&ndash; https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-core &ndash;&gt;
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-core</artifactId>
			<version>1.11.712</version>
		</dependency>-->

<!--		&lt;!&ndash; https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk &ndash;&gt;
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.11.712</version>
		</dependency>-->

<!--		&lt;!&ndash; https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-kms &ndash;&gt;
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-kms</artifactId>
			<version>1.11.712</version>
		</dependency>-->

		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>1.11.712</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
<!--			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.mphrx.datalake.DatalakeApplication</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> &lt;!&ndash; this is used for inheritance merges &ndash;&gt;
						<phase>compile</phase> &lt;!&ndash; bind to the packaging phase &ndash;&gt;
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>-->


<!--			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>${start-class}</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>rename-file</id>
						<phase>package</phase>
						<goals>
							<goal>rename</goal>
						</goals>
						<configuration>
							<sourceFile>target/${project.name}-${project.version}.jar.original</sourceFile>
							<destinationFile>target/${project.name}-${project.version}-original.jar</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>-->

			<!-- trying with another plugin -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot-version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
					<transformers>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.handlers</resource>
						</transformer>
						<transformer
								implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
							<resource>META-INF/spring.factories</resource>
						</transformer>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
							<resource>META-INF/spring.schemas</resource>
						</transformer>
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
						<transformer
								implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>${start-class}</mainClass>
						</transformer>
					</transformers>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>

		<!--Excluding the internal property jar file-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>
